---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config
data:
  #MONGODB_URI: "mongodb://generalUser:redOliNan4679@localhost:30100"
  DOMAIN: "https://local.webmodule.com.br"
  CLIENT_ID: "angular"
  CLIENT_SECRET: "red_wm3@an6u1@r%"
  TOKNEN_INFO_URI: "https://local.webmodule.com.br/auth/oauth/check_token"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  #namespace: wm3 #create a new namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      name: auth-service
      labels:
        app: auth-service
        version: v1
    spec:
      containers:
      - name: auth-service
        image: wm3/auth-service
        imagePullPolicy: IfNotPresent # <-- change to Always
        ports:
          - containerPort: 8080
        env:
          - name: "MONGODB_URI"
            #value: "mongodb://admin:red321Company@10.106.252.208:27017/auth?authSource=admin&readPreference=primary&ssl=false"
            value: "mongodb://admin:red321Company@svc-pod-mongo:27017/auth?authSource=admin&readPreference=primary&ssl=false"
          - name: "CLIENT_ID_API"
            value: "api"
          - name: "CLIENT_SECRET_API"
            value: "api_wm3@p15re8%"
          - name: JAVA_OPTS
            value: "-server -Dlogging.level.org.springframework=INFO,DEBUG,ERROR -Dlogging.root=INFO,DEBUG,ERROR"  #-XX:+PrintFlagsFinal -Xms512m -Xmx2000m -Djava.util.concurrent.ForkJoinPool.common.parallelism=40
        envFrom:
          - configMapRef:
              name: config
        livenessProbe: #verificar o health do container
          httpGet:
            path: /actuator/health # ver qual caminha para verificar se esta saudavel
            port: 8080
          initialDelaySeconds: 240
          periodSeconds: 30
          timeoutSeconds: 60
          failureThreshold: 8
        readinessProbe: #a aplicação estará pronta para receber requisição a partir do momento que receber sucesso no get do path
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 180
          periodSeconds: 60
          timeoutSeconds: 60
          failureThreshold: 8
        resources:
          limits:
            cpu: 200m
            #memory: 4000Mi
          requests:
            cpu: 100m
            #memory: 1000Mi
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  labels:
    app: auth-service
spec:
  type: NodePort
  selector:
    app: auth-service
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
      #nodePort: 30001 # external port
      
---
#versions: https://github.com/kubernetes-sigs/metrics-server/
#kubectl apply -f components.yaml
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: auth-service
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: auth-service
  minReplicas: 1
  maxReplicas: 1
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
  behavior: 
    scaleDown: 
      stabilizationWindowSeconds: 300
      policies: 
      - type: Pods
        value: 1
        periodSeconds: 180